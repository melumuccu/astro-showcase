---
import createMetascraper from 'metascraper'
import metascraperDescription from 'metascraper-description'
import metascraperImage from 'metascraper-image'
import metascraperTitle from 'metascraper-title'
import { isAmazonURL } from '../../lib/blog-helpers.ts'
import * as interfaces from '../../lib/interfaces.ts'

export interface Props {
  block: interfaces.Block
  urlMap: { [key: string]: string }
}

const { block, urlMap } = Astro.props

const urlString = (block.Bookmark || block.LinkPreview || block.Embed).Url

let url: URL
let metadata: Record<string, string>
try {
  url = new URL(urlString)

  if (!isAmazonURL(url)) {
    const metascraper = createMetascraper([
      metascraperDescription(),
      metascraperImage(),
      metascraperTitle(),
    ])
    const html = urlMap[url.toString()]
    if (html) {
      metadata = await metascraper({ html, url })
    }
  }
} catch (err) {
  console.log(err)
}
---

{
  url && (
    <>
      {isAmazonURL(url) ? (
        <div class="no-metadata">
          <a href={url.toString()}>{url.toString()}</a>
        </div>
      ) : (
        <div class="bookmark">
          <a href={url.toString()} target="_blank" rel="noopener noreferrer">
            <div>
              <div>{metadata && metadata.title}</div>
              <div>{metadata && metadata.description}</div>
              <div>
                <div>
                  <img
                    src={`https://www.google.com/s2/favicons?domain=${url.hostname}`}
                    alt="Favicon of the bookmark site"
                    loading="lazy"
                  />
                </div>
                <div>{url.origin}</div>
              </div>
            </div>
            <div>
              {metadata && metadata.image && (
                <img
                  src={metadata.image}
                  alt="Site image of the bookmark"
                  loading="lazy"
                />
              )}
            </div>
          </a>
        </div>
      )}
    </>
  )
}

<style>
  .no-metadata > a {
    border-color: var(--anchor-border);
    border-bottom: 0.05em solid;
    opacity: 0.7;
  }

  .bookmark {
    display: flex;
    width: 100%;
    max-width: 100%;
    overflow: hidden;
    font-size: 0.9rem;
  }

  .bookmark > a {
    box-sizing: border-box;
    display: flex;
    width: 100%;
    overflow: hidden;
    text-decoration: none;
    user-select: none;
    border: 1px solid rgb(0 0 0 / 20%);
    border-radius: 3px;
  }

  .bookmark > a > div:last-child {
    position: relative;
    flex: 1 1 180px;
  }

  .bookmark > a > div:first-child {
    flex: 4 1 180px;
    padding: 12px 14px 14px;
    overflow: hidden;
    color: var(--fg);
    text-align: left;
  }

  .bookmark > a > div:first-child > div:first-child {
    width: 120px;
    min-width: 100%;
    min-height: 24px;
    margin-bottom: 2px;
    overflow: hidden;
    font-size: 14px;
    line-height: 20px;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .bookmark > a > div:first-child > div:nth-child(2) {
    height: 32px;
    overflow: hidden;
    font-size: 12px;
    line-height: 16px;
    opacity: 0.8;
  }

  .bookmark > a > div:first-child > div:last-child {
    display: flex;
    margin-top: 6px;
  }

  .bookmark > a > div:first-child > div:last-child > div:first-child {
    width: 16px;
    min-width: 16px;
    height: 16px;
    margin-right: 6px;
  }

  .bookmark > a > div:last-child > img {
    position: absolute !important;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .bookmark > a > div:first-child > div:last-child > div:first-child > img {
    display: inline-block;
    max-width: 100%;
  }

  .bookmark > a > div:first-child > div:last-child > div:last-child {
    overflow: hidden;
    font-size: 12px;
    line-height: 16px;
    color: var(--fg);
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @media (width <= 640px) {
    .bookmark > a > div:last-child {
      display: none;
    }
  }
</style>
